//naveen mall
#include<bits/stdc++.h>
using namespace std;
#define fast ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define pb               push_back
#define sz(c)            (int)c.size()
#define len(c)           (int)c.length()
#define vec              vector
#define int              long long int
#define all(c)           c.begin(), c.end()
#define rall(c)          c.rbegin(), c.rend()
#define trav(a,i)        for(auto i: a)
#define rep(i, begin, end) for (__typeof(end) i = (begin) - ((begin) > (end)); i != (end) - ((begin) > (end)); i += 1 - 2 * ((begin) > (end)))
#define invect(v,n)       for(int i=0;i<n;i++ ){int arb;cin>>arb;v.pb(arb);}
#define inset(s,n)        rep(i,0,n){int aset;cin>>aset;s.insert(aset);}
#define display(c)        trav(c,i) cout<<i<<" ";cout<<"\n";
#define F                 first
#define S                 second
#define pii               pair<int,int>
#define PB                pop_back
#define endl              "\n"
#define what(x) cerr <<  #x << " is " << x << endl;
int sum() { return 0; }template<typename T,typename... Args>T sum(T a, Args... args) { return a + sum(args...); }
#define kyra   1000000007
#define N 300003
const long long INF=1e18;
int n;
int m;
vector<tuple<int, int, int> > v;
int ans[1003];
int tans[1003];
bool can(int time)
 {  int ss=0;
       for(int i=0;i<n;i++)
       {
         int x= get<0>(v[i]);
         int y= get<1>(v[i]);
         int z= get<2>(v[i]);
         int ballon = time/(x*y + z);
        int rem = time - ballon * (x*y + z);
        ballon *= y;
        if(rem >= x) {
            if(rem/x > y) {
                ballon += y;
            }
            else ballon += (rem/x);
        }
        tans[i] = ballon;
        ss+=tans[i];
       }
       if(ss>=m)
          { 
             

              return true;

           } 
           else
             return false;
 }
void solve()
{ 
  double c;
  cin>>c;
  double l=0;
      double r=1e6;
  for(int i=0;i<100;i++)
     {
      
      double m=(l+r)/2;
      if(m*m+sqrt(m)<c)
         l=m;
       else
        r=m;
     }
     cout<<setprecision(8)<<r;

}

signed main()
{fast
  
   #ifdef NCR
        init();
   #endif
  
   int t=1;
   //cin>>t;
   
   while(t--)
     {
      solve();
     }
}
