//naveen mall
#include<bits/stdc++.h>
using namespace std;
#define fast ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define pb               push_back
#define sz(c)            (int)c.size()
#define len(c)           (int)c.length()
#define vec              vector
#define int              long long int
#define all(c)           c.begin(), c.end()
#define rall(c)          c.rbegin(), c.rend()
#define trav(a,i)        for(auto i: a)
#define rep(i, begin, end) for (__typeof(end) i = (begin) - ((begin) > (end)); i != (end) - ((begin) > (end)); i += 1 - 2 * ((begin) > (end)))
#define invect(v,n)       for(int i=0;i<n;i++ ){int arb;cin>>arb;v.pb(arb);}
#define inset(s,n)        rep(i,0,n){int aset;cin>>aset;s.insert(aset);}
#define display(c)        trav(c,i) cout<<i<<" ";cout<<"\n";
#define F                 first
#define S                 second
#define pii               pair<int,int>
#define PB                pop_back
//#define endl              "\n"
#define what(x) cerr <<  #x << " is " << x << endl;
int sum() { return 0; }template<typename T,typename... Args>T sum(T a, Args... args) { return a + sum(args...); }
#define kyra   1000000007
#define N 100003
const long long INF=1e18;
int a[N];
double temp[N];
int n;
int d;
int lans;
int rans;

bool good(double m)
 {
   rep(i,0,n)
     { temp[i]=a[i]-m;
     }
   
   rep(i,1,n)
     temp[i]+=temp[i-1];

     if(temp[d-1]>=0)
       {
        rans=d-1;
        lans=0;
        return true;
       }
      double mi=temp[0];
      int mid=0;
      for(int i=d;i<n;i++)
         {  if(temp[i]>=0)
               {
                rans=i;
                lans=0;
                return true;
               }
           if(mi>temp[i-d])
             {
              mi=temp[i-d];
              mid=i-d;
             }
             if(temp[i]-mi>=0)
                {
                  lans=mid+1;
                  rans=i;
                  return true;
                }
         }

         return false;




 }
void solve()
{  
    cin>>n>>d;
    rep(i,0,n)
      cin>>a[i];
    double l=0;
    double r=200;
    for(int i=0;i<100;i++)
       {
        double m=(l+r)/2;
        if(good(m))
           l=m;
         else
            r=m;

       }

//cout<<l<<" ";
//good(6.66);
      // good(l);
cout<<lans+1<<" "<<rans+1;
}

signed main()
{fast
  
   #ifdef NCR
        init();
   #endif
  
   int t=1;
 // cin>>t;
   // 
   while(t--)
     {
      solve();
     }
}
